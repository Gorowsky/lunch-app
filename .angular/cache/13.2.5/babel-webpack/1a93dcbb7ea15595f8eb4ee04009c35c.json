{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction LunchSpotsNavComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 2, 3)(3, \"mat-icon\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 5);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const link_r1 = ctx.$implicit;\n\n    const _r2 = i0.ɵɵreference(2);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, link_r1.path))(\"active\", _r2.isActive);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(link_r1.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(link_r1.label);\n  }\n}\n/**\n * I made an router outlet out of tabs because\n * this way we got much more scalable solution.\n * Instead of one HOC which handles logic of\n * filtering statuses and lists them we got possibility\n * of create different tab components which can\n * handle their own specific logic. We can also access\n * to specific tab via url in this approach. There is also\n * posibility of creating outer router and handle this one\n * as its child.\n */\n\n\nexport let LunchSpotsNavComponent = /*#__PURE__*/(() => {\n  class LunchSpotsNavComponent {\n    constructor() {\n      this.navLinks = [];\n    }\n\n  }\n\n  LunchSpotsNavComponent.ɵfac = function LunchSpotsNavComponent_Factory(t) {\n    return new (t || LunchSpotsNavComponent)();\n  };\n\n  LunchSpotsNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LunchSpotsNavComponent,\n    selectors: [[\"app-lunch-spots-nav\"]],\n    inputs: {\n      navLinks: \"navLinks\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[\"mat-tab-nav-bar\", \"\", 1, \"nav-bar\", 3, \"backgroundColor\", \"color\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-tab-link\", \"\", \"routerLinkActive\", \"\", 1, \"nav-bar-link\", 3, \"routerLink\", \"active\"], [\"rla\", \"routerLinkActive\"], [1, \"nav-bar-link-icon\"], [1, \"nav-bar-link-label\"]],\n    template: function LunchSpotsNavComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n        i0.ɵɵelementStart(1, \"nav\", 0);\n        i0.ɵɵtemplate(2, LunchSpotsNavComponent_ng_container_2_Template, 7, 6, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"backgroundColor\", \"primary\")(\"color\", \"accent\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.navLinks);\n      }\n    },\n    directives: [i1.RouterOutlet, i2.MatTabNav, i3.NgForOf, i1.RouterLinkWithHref, i2.MatTabLink, i1.RouterLinkActive, i4.MatIcon],\n    styles: [\"[_nghost-%COMP%]{display:flex;flex:1;flex-flow:column;overflow-y:auto}[_nghost-%COMP%]   .nav-bar-link[_ngcontent-%COMP%]{flex:1;opacity:1}[_nghost-%COMP%]   .nav-bar-link-icon[_ngcontent-%COMP%]{margin-right:10px}[_nghost-%COMP%]   .nav-bar-link-label[_ngcontent-%COMP%]{color:#fff}\"]\n  });\n  return LunchSpotsNavComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
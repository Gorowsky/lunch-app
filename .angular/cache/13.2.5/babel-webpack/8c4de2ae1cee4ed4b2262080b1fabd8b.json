{"ast":null,"code":"import { BehaviorSubject, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\n * Cachable system. Storage can be changed in module import.\n */\n\nexport let LunchApiService = /*#__PURE__*/(() => {\n  class LunchApiService {\n    constructor(http) {\n      this.http = http;\n      this.PORT = \"8081\";\n      this.HOST = \"localhost\";\n      this.LUNCH_API_ROOT = `http://${this.HOST}:${this.PORT}`;\n      this.lunchSpots$ = new BehaviorSubject(undefined);\n    }\n\n    getLunchSpots() {\n      return this.lunchSpots$.pipe(switchMap(lunchSpots => {\n        console.log(lunchSpots);\n\n        if (!lunchSpots) {\n          return this.http.get(`${this.LUNCH_API_ROOT}/lunch-spots`);\n        }\n\n        return of(lunchSpots);\n      }), tap(lunchSpots => this.lunchSpots$.next(lunchSpots)));\n    }\n\n  }\n\n  LunchApiService.ɵfac = function LunchApiService_Factory(t) {\n    return new (t || LunchApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LunchApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LunchApiService,\n    factory: LunchApiService.ɵfac\n  });\n  return LunchApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}